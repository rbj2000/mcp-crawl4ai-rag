[tool:pytest]
# Pytest configuration for comprehensive AI provider testing framework

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests across components
    performance: Performance and benchmarking tests
    migration: Migration and compatibility tests
    docker: Docker-based integration tests
    story: Epic story validation tests
    slow: Slow running tests (>5 seconds)
    requires_ollama: Tests requiring Ollama server
    requires_docker: Tests requiring Docker
    requires_openai: Tests requiring OpenAI API key
    mock_only: Tests that run only with mocked dependencies
    comprehensive: Comprehensive integration test suite

# Test execution
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --maxfail=10
    --durations=20
    --color=yes
    --junit-xml=test-results.xml
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-fail-under=80

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Minimum Python version
minversion = 3.8

# Test timeout (10 minutes)
timeout = 600

# Parallel execution
#workers = auto
#dist = loadfile

# Environment variables for testing
env =
    PYTHONPATH = src
    PYTEST_CURRENT_TEST = true
    ENABLE_UNIT_TESTS = true
    ENABLE_INTEGRATION_TESTS = false
    ENABLE_PERFORMANCE_TESTS = false
    ENABLE_DOCKER_TESTS = false
    AI_PROVIDER = openai
    OPENAI_API_KEY = sk-test-mock-key-for-testing
    OLLAMA_BASE_URL = http://localhost:11434
    DATABASE_PROVIDER = sqlite
    USE_MOCK_PROVIDERS = true